#!/bin/sh
# This file is executed on boot to initialize the system and can also be run by
# the user to start/stop daemons.

# Fallback Configuration Values, to be able to run even with a broken, deleted
# or outdated rc.conf:
DAEMONS=$(ls /etc/rc.d)
ENABLED="@syslog-ng @crond @dhcpcd @sshd"
UDEV="busybox"
NETWORK_INTERFACE="eth0"
WIFI_INTERFACE="wlan0"
HOSTNAME="$(cat /etc/hostname)"

. /etc/rc.conf

on_boot() {
  #===================
  # mount the API filesystem
  # /proc, /sys, /run, /dev, /run/lock, /dev/pts, /dev/shm
  echo_color 3 mounting API filesystem...
  mountpoint -q /proc    || mount -t proc proc /proc -o nosuid,noexec,nodev
  mountpoint -q /sys     || mount -t sysfs sys /sys -o nosuid,noexec,nodev
  mountpoint -q /run     || mount -t tmpfs run /run -o mode=0755,nosuid,nodev
  mountpoint -q /dev     || mount -t devtmpfs dev /dev -o mode=0755,nosuid
  mkdir -p /dev/pts /dev/shm
  mountpoint -q /dev/pts || mount -t devpts devpts /dev/pts -o mode=0620,gid=5,nosuid,noexec
  mountpoint -q /dev/shm || mount -t tmpfs shm /dev/shm -o mode=1777,nosuid,nodev

  mkdir -p -m 1777 /run/lock

  #===================
  # initialize system
  echo_color 3 setting up loopback device...
  /usr/sbin/ip link set up dev lo

  echo_color 3 initializing udev...
  if [ "$UDEV" = systemd ]; then
    /usr/lib/systemd/systemd-udevd --daemon
    /usr/bin/udevadm trigger --action=add --type=subsystems
    /usr/bin/udevadm trigger --action=add --type=devices
  elif [ "$UDEV" = eudev ]; then
    /usr/bin/udevd --daemon
    /usr/bin/udevadm trigger --action=add --type=subsystems
    /usr/bin/udevadm trigger --action=add --type=devices
  else # use busybox mdev as fallback:
    busybox mdev -s
    echo /sbin/mdev > /proc/sys/kernel/hotplug
  fi

  echo_color 3 setting hostname...
  echo "$HOSTNAME" >| /proc/sys/kernel/hostname

  echo_color 3 mounting...
  mount -a
  mount -o remount,rw /

  #===================
  # load /etc/rc.local
  if [ -x /etc/rc.local ]; then
    echo_color 3 loading /etc/rc.local...
    /etc/rc.local
  fi

  #===================
  # start the default daemons
  echo_color 3 starting daemons...
  for dmn in $ENABLED; do
    if [ "$(echo "$dmn" | awk '{ s=substr($0, 1, 1); print s; }')" = '@' ]; then
      start_dmn "$(echo "$dmn" | awk '{ s=substr($0, 2); print s; }')" &
    else
      start_dmn "$dmn"
    fi
  done
}

on_shutdown() {
  #===================
  # stop the default daemons
  echo_color 3 stopping daemons...
  stop_dmn all

  echo_color 3 stopping all remaining processes...
  busybox killall5 -TERM
  sleep 3
  echo_color 3 killing all remaining processes...
  busybox killall5 -KILL

  #===================
  # load rc.local.shutdown
  if [ -x /etc/rc.local.shutdown ]; then
    echo_color 3 loading /etc/rc.local.shutdown...
    /etc/rc.local.shutdown
  fi

  #===================
  # shut down udev
  echo_color 3 shutting down udev...
  if [ "$UDEV" = systemd ]; then
    killall systemd-udevd
  elif [ "$UDEV" = eudev ]; then
    killall udevd
  fi

  echo_color 3 Detaching all loop devices...
  losetup -D

  #===================
  # umount the API filesystem
  echo_color 3 unmounting API filesystem...
  umount -r /run

  umount -a -r

  mount -o ro,remount /

}

echo_color() {
  color="$1"
  shift
  printf "\033[1;3%sm%s\033[00m\n" "$color" "$*"
}

check_run_cmd () {
  cmd="$1"
  dmn="$2"
  action=$(echo $cmd | sed -e 's/^\([a-z]\)/\u\1/' -e 's/$/ing/')
  echo_color 2 "$action $dmn"
  if [ -f "/etc/rc.d/$dmn" ]; then
    . "/etc/rc.d/$dmn";
    $cmd;
  else
    echo_color 3 no daemon found for \'$dmn\' \(does it have a file in /etc/rc.d\?\)
    exit 1
  fi
}

restart_dmn () {
  echo_color 2 "Restarting $1"
  if [ -f "/etc/rc.d/$1" ]; then
    . "/etc/rc.d/$1";

    if type restart >/dev/null 2>&1; then
      restart;
    else
      stop;
      start;
    fi
  else
    echo_color 3 no daemon found for '$1' \(does it have a file in /etc/rc.d?\);
    exit 1;
  fi
}

poll_dmn () {
  if [ -f "/etc/rc.d/$1" ]; then
      . "/etc/rc.d/$1";
      poll;
  else
    echo_color 3 no daemon found for '$1' \(does it have a file in /etc/rc.d?\);
    exit 1;
  fi
}


#===================
# handle arguments
case "$1" in
  init)
    on_boot;
    ;;

  shutdown)
    on_shutdown;

    ;;
  restart)
    restart_dmn "$dmn"
    ;;

  start|stop)
    cmd="$1";
    shift;
    for dmn in ${@:-$DAEMONS}; do
        check_run_cmd "$cmd" "$dmn"
    done
    ;;

  list|'')
    # list all daemons and their status
    for dmn in $DAEMONS; do
      if [ "$dmn" = "all" -o "$dmn" = "enabled" ]; then
        continue;
      fi

      if poll_dmn "$dmn" >/dev/null 2>&1; then
        echo_color 2 [X] "$dmn";
      else
        echo_color 0 [ ] "$dmn";
      fi
    done
    ;;

  --version)
    printf 'rc - version 0.1a\n'
    ;;

  *)
    self=$(basename "$0")
    printf 'Usage: %s [--help] [--version] <action> [list of daemons]\n' self
    printf '\n'
    printf 'Actions:\n'
    printf '   %s list               shows status of all daemons (default action)\n' self
    printf '   %s start [daemons]    starts daemons\n' self
    printf '   %s stop [daemons]     stops daemons\n' self
    printf '   %s restart [daemons]  restarts daemons\n' self
    ;;
esac
